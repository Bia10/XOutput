name: Build XOutput

env:
  VERSION: 4.0.0
  SERVER_TARGET: 'netcoreapp5.0'
  GUI_TARGET: 'net5.0-windows'

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_net:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101
    - name: Clean
      run: dotnet clean --configuration Release && dotnet nuget locals all --clear
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      shell: powershell
      run: dotnet build -c Release -p:Version=$env:VERSION -p:AssemblyVersion=$env:VERSION -p:FileVersion=$env:VERSION
    - name: Test
      run: dotnet test -c Release --no-build
    - name: Persist server  
      uses: actions/upload-artifact@v2
      with:
        name: server
        path: ./*/bin/Release/${{ env.SERVER_TARGET }}/
    - name: Persist app  
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: ./*/bin/Release/${{ env.GUI_TARGET }}/

  build_node:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Build node
      run: cd Web && npm install
    - name: Persist webapp  
      uses: actions/upload-artifact@v2
      with:
        name: webapp
        path: ./Web/webapp

  create_package:
    runs-on: windows-latest
    needs: [ build_net, build_node ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create package
      shell: powershell
      run: | 
        7z a XOutput.zip -- `
        XOutput.Core\bin\Release\$env:SERVER_TARGET\XOutput.Core.dll `
        XOutput.Core\bin\Release\$env:SERVER_TARGET\NLog.dll `
        XOutput.Api\bin\Release\$env:SERVER_TARGET\XOutput.Api.dll `
        XOutput.Emulation\bin\Release\$env:SERVER_TARGET\XOutput.Emulation.dll `
        XOutput.Emulation\bin\Release\$env:SERVER_TARGET\Nefarius.ViGEm.Client.dll `
        XOutput.Mapping\bin\Release\$env:SERVER_TARGET\XOutput.Mapping.dll `
        XOutput.Server\bin\Release\$env:SERVER_TARGET\XOutput.Server.dll `
        XOutput.Server\bin\Release\$env:SERVER_TARGET\XOutput.Server.exe `
        XOutput.Server\bin\Release\$env:SERVER_TARGET\XOutput.Server.runtimeconfig.json `
        XOutput.App\bin\Release\$env:GUI_TARGET\XOutput.App.dll `
        XOutput.App\bin\Release\$env:GUI_TARGET\XOutput.App.exe `
        XOutput.App\bin\Release\$env:GUI_TARGET\XOutput.App.runtimeconfig.json `
        XOutput.App\bin\Release\$env:GUI_TARGET\SharpDX.dll `
        XOutput.App\bin\Release\$env:GUI_TARGET\SharpDX.DirectInput.dll `
        XOutput.App\bin\Release\$env:GUI_TARGET\Hardcodet.Wpf.TaskbarNotification.dll `
        XOutput.App\bin\Release\$env:GUI_TARGET\HIDSharp.dll `
        Web\webapp `
        bin\*
    - name: Upload zip
      uses: actions/upload-artifact@v2
      with:
        name: XOutput
        path: XOutput.zip
